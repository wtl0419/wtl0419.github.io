<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SEwtl</title>
  
  <subtitle>嵌入式软件工程师</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-08-28T13:05:26.631Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Wtl</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2023.8工作记录</title>
    <link href="http://example.com/2023/08/28/2023-8%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2023/08/28/2023-8%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BD%95/</id>
    <published>2023-08-28T12:41:39.000Z</published>
    <updated>2023-08-28T13:05:26.631Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2023-8月工作记录"><a href="#2023-8月工作记录" class="headerlink" title="2023.8月工作记录"></a>2023.8月工作记录</h1><h2 id="本月工作内容"><a href="#本月工作内容" class="headerlink" title="本月工作内容"></a>本月工作内容</h2><p>本月进行了从stm32标准库，改为HAL库的工作，在移植过程中遇到了诸多问题，但全部一一解决了。</p><h2 id="工作感悟"><a href="#工作感悟" class="headerlink" title="工作感悟"></a>工作感悟</h2><p>在本月工作过程中，与和我对接的人交流很少，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2023-8月工作记录&quot;&gt;&lt;a href=&quot;#2023-8月工作记录&quot; class=&quot;headerlink&quot; title=&quot;2023.8月工作记录&quot;&gt;&lt;/a&gt;2023.8月工作记录&lt;/h1&gt;&lt;h2 id=&quot;本月工作内容&quot;&gt;&lt;a href=&quot;#本月工作内容&quot; cla</summary>
      
    
    
    
    <category term="记录" scheme="http://example.com/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="工作" scheme="http://example.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>两数之和</title>
    <link href="http://example.com/2023/07/31/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <id>http://example.com/2023/07/31/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</id>
    <published>2023-07-31T08:32:08.000Z</published>
    <updated>2023-07-31T08:38:51.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h1><p>从今天开始进行算法学习，目标是力扣热门一百题。</p><p>第一天是两数之和，感觉没有太大难度，使用两个循环遍历数组即可得到目标数值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* <span class="title function_">twoSum</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize, <span class="type">int</span> target, <span class="type">int</span>* returnSize)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; numsSize; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* code */</span></span><br><span class="line">        <span class="keyword">for</span> ( j = i+<span class="number">1</span>; j &lt; numsSize; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* code */</span></span><br><span class="line">            <span class="keyword">if</span>(nums[i] + nums[j] == target)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> *retArr = <span class="built_in">malloc</span>(<span class="number">2</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">                retArr[<span class="number">0</span>] = i;</span><br><span class="line">                retArr[<span class="number">1</span>] = j;</span><br><span class="line">                *returnSize = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> retArr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    *returnSize = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;两数之和&quot;&gt;&lt;a href=&quot;#两数之和&quot; class=&quot;headerlink&quot; title=&quot;两数之和&quot;&gt;&lt;/a&gt;两数之和&lt;/h1&gt;&lt;p&gt;从今天开始进行算法学习，目标是力扣热门一百题。&lt;/p&gt;
&lt;p&gt;第一天是两数之和，感觉没有太大难度，使用两个循环遍历数组即可得</summary>
      
    
    
    
    <category term="算法学习" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>大话设计模式</title>
    <link href="http://example.com/2023/07/30/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2023/07/30/%E5%A4%A7%E8%AF%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</id>
    <published>2023-07-30T13:12:17.000Z</published>
    <updated>2023-07-30T13:32:07.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大话设计模式"><a href="#大话设计模式" class="headerlink" title="大话设计模式"></a>大话设计模式</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;大话设计模式&quot;&gt;&lt;a href=&quot;#大话设计模式&quot; class=&quot;headerlink&quot; title=&quot;大话设计模式&quot;&gt;&lt;/a&gt;大话设计模式&lt;/h1&gt;</summary>
      
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>程序员的自我修养</title>
    <link href="http://example.com/2023/07/30/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/"/>
    <id>http://example.com/2023/07/30/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/</id>
    <published>2023-07-30T13:12:01.000Z</published>
    <updated>2023-07-31T13:18:27.141Z</updated>
    
    <content type="html"><![CDATA[<h1 id="程序员的自我修养"><a href="#程序员的自我修养" class="headerlink" title="程序员的自我修养"></a>程序员的自我修养</h1><h2 id="谈职业生涯"><a href="#谈职业生涯" class="headerlink" title="谈职业生涯"></a>谈职业生涯</h2><h3 id="正确的认识自己"><a href="#正确的认识自己" class="headerlink" title="正确的认识自己"></a>正确的认识自己</h3><p>我将程序员作为我的职业，也是我趋于理想化的工作，在这个工作中，我可以在大部分的时间里坐在工位上自己工作，在工作上遇到了问题大部分也可以通过搜索引擎和养成的工作习惯解决问题，减少了与他人交流的时间和向他人请教时的交流。</p><p>在认识自我方面我将自己看作一个手艺人，有一门可以吃饭的手艺，不必去和大部分人去做一些可替代性高的工作，虽然程序员的可替代性也是比较高的，但竞争仅来自于同行。</p><h3 id="比一般人更加努力"><a href="#比一般人更加努力" class="headerlink" title="比一般人更加努力"></a>比一般人更加努力</h3><p>在比一般人更加努力方面，我个人学习的自驱力是很强的，因为我从学习开始就感觉的到自己在各个方面都会比正常人差一点，我只有努力了才会和正常人齐肩，所以我就会倾向于在空闲时间学习，用于追赶同龄人或和我一样的普通人，我所学到的东西和现在的能力没有天赋加持，全都是在空闲时间学习堆时间堆出来的个人能力。</p><h3 id="个人权威"><a href="#个人权威" class="headerlink" title="个人权威"></a>个人权威</h3><p>适时建立个人权威方面，我在参加工作没过多久就有过想要将公司产品模块的代码转换一种工作方式，转变成状态机的工作方式，不过想了想转变了工作方式对上位机对下位机进行通信时产生不了太大的差别，就权当练手状态机了。</p><h3 id="遵循最佳实践方式"><a href="#遵循最佳实践方式" class="headerlink" title="遵循最佳实践方式"></a>遵循最佳实践方式</h3><p>遵循最佳实践方面，我在学习时就会倾向于去了解我使用的工具最本质的东西，这也就是我会选择C语言作为我主要的工作语言，接近底层，能够清楚地了解到程序在运行过程中的变化。除了了解工具最本质的方面还有需要对工具之外和工具配合使用的各种因素的理解，这样才能做出好的产品。向优秀的人学习，将优秀的人生产出来的东西学会并变成自己能够熟练使用的才是最佳实践。</p><h3 id="保持好奇心"><a href="#保持好奇心" class="headerlink" title="保持好奇心"></a>保持好奇心</h3><p>程序员需要保持好奇心并乐于探索新事物，很符合我这个对任何事情都没有天赋，但对学习东西具有强烈兴趣的人，想学的东西太多，但时间却又太少。</p><h3 id="抛开代码与人沟通"><a href="#抛开代码与人沟通" class="headerlink" title="抛开代码与人沟通"></a>抛开代码与人沟通</h3><p>在工作过程中应适当地抛开代码与人沟通，在与人沟通方面我认为与人沟通的前提是我已经熟练地掌握了工作技能，在工作过程中对自己负责的模块进行设计，这样的前提下是很乐意与别人沟通的，因为与别人沟通可以了解别人对我开发的模块的意见，收集意见可以使我更好地完善负责的产品模块。</p><h3 id="要为优秀的人工作"><a href="#要为优秀的人工作" class="headerlink" title="要为优秀的人工作"></a>要为优秀的人工作</h3><p>要为优秀的人工作，我个人工作感觉，在一个公司中有一个能让我信服口服的工程师时，我工作的积极性非常高，因为哪怕是受到批评也会很开心，优秀的人对我提出的建议是我要走好多弯路才能摸索出来的东西。</p><h3 id="工作之外"><a href="#工作之外" class="headerlink" title="工作之外"></a>工作之外</h3><p>关于工作之外的生活部分，刚毕业这段时间，几乎没有了个人时间，白天上班，晚上学习，其余时间休息，本打算工作之后就有时间去好好听歌写字了，可挣得钱太少不允许我这么做，需要将现阶段的工作做好并快速发展成为一名优秀的工程师挣到更多的钱才有时间和心思去做这种事情。现阶段先把工作做好吧。</p><h3 id="相信自己的能力"><a href="#相信自己的能力" class="headerlink" title="相信自己的能力"></a>相信自己的能力</h3><p>相信自己的天赋和创造力，在相信自己这方面我是对自己有着很大的自信的，但是我又是个很矛盾的人，一边是对未来的迷茫，一边又是对自己能力的绝对信任，我相信我自己只要想做成什么事情并付出相应的行动我是一定能做成这件事情的，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;程序员的自我修养&quot;&gt;&lt;a href=&quot;#程序员的自我修养&quot; class=&quot;headerlink&quot; title=&quot;程序员的自我修养&quot;&gt;&lt;/a&gt;程序员的自我修养&lt;/h1&gt;&lt;h2 id=&quot;谈职业生涯&quot;&gt;&lt;a href=&quot;#谈职业生涯&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="工作" scheme="http://example.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>2023七月工作记录</title>
    <link href="http://example.com/2023/07/30/2023%E4%B8%83%E6%9C%88%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2023/07/30/2023%E4%B8%83%E6%9C%88%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BD%95/</id>
    <published>2023-07-30T13:11:29.000Z</published>
    <updated>2023-07-31T03:01:10.725Z</updated>
    
    <content type="html"><![CDATA[<h1 id="七月工作记录"><a href="#七月工作记录" class="headerlink" title="七月工作记录"></a>七月工作记录</h1><p>本月开始在校招进入的公司正式开始工作，首先了解了公司的产品，是一些我之前做过的实验里面基本的东西，写的代码也是很基本的代码，所以很轻松的就上手工作了，唯一变化的是公司特定的模块间传输协议，需要根据不同传输方式来实现不同的传输协议。</p><p>整体系统的工作流程为硬件电路设计到PCB画板，在设计好的电路上面进行编程实现对数据的采集并实现协议对模块进行通信，我主要做的就是这部分工作，但在工作过程中时常感觉收到硬件的制约，因为电路不是我设计的，所以需要询问电路相关的问题，后续想要学习电路相关知识来补充电路设计的能力，不然在公司中受人影响太大，我的工作像是架空在中间的部分，向上对纯软件的开发人员没有交集，向下对纯硬件设计也没有太多交集，只是在中间做嵌入式的软件工作，目前需要的是打破这个局面，不能只夹在中间。</p><p>纯软件的工作据我观察有进行公司数据库开发和公司上位机接收的数据的界面绘制，使用vue进行开发的，目前仅仅是了解这么多，上次在听公司部门经理的安排是后续可能是做一些破译软件的工作，看他安排吧，他有他的安排，这只是这份工作，先把本职工作做好，在工作时间外进行副业的开拓吧，先把微信读书里的数字电路和模拟电路自学指南看完，对电路设计有个大概了解，后续在对STM32芯片的库调用和芯片底层寄存器操作以及cortex-m3的运行机制进行学习，把这个方向学透。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;七月工作记录&quot;&gt;&lt;a href=&quot;#七月工作记录&quot; class=&quot;headerlink&quot; title=&quot;七月工作记录&quot;&gt;&lt;/a&gt;七月工作记录&lt;/h1&gt;&lt;p&gt;本月开始在校招进入的公司正式开始工作，首先了解了公司的产品，是一些我之前做过的实验里面基本的东西，写的代码也</summary>
      
    
    
    
    <category term="记录" scheme="http://example.com/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="工作" scheme="http://example.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>2023八月计划</title>
    <link href="http://example.com/2023/07/30/2023%E5%85%AB%E6%9C%88%E8%AE%A1%E5%88%92/"/>
    <id>http://example.com/2023/07/30/2023%E5%85%AB%E6%9C%88%E8%AE%A1%E5%88%92/</id>
    <published>2023-07-30T13:10:42.000Z</published>
    <updated>2023-07-31T08:55:36.772Z</updated>
    
    <content type="html"><![CDATA[<h1 id="八月计划"><a href="#八月计划" class="headerlink" title="八月计划"></a>八月计划</h1><h2 id="书籍阅读"><a href="#书籍阅读" class="headerlink" title="书籍阅读"></a>书籍阅读</h2><h3 id="《大话设计模式》"><a href="#《大话设计模式》" class="headerlink" title="《大话设计模式》"></a>《大话设计模式》</h3><p>对软件的设计模式进行学习，目前可能用不上，先对设计模式有个概念性认识。</p><h3 id="《C专家编程》"><a href="#《C专家编程》" class="headerlink" title="《C专家编程》"></a>《C专家编程》</h3><p>深入了解C语言中的机制，在使用时多加注意。</p><h2 id="视频学习"><a href="#视频学习" class="headerlink" title="视频学习"></a>视频学习</h2><h3 id="YouTube嵌入式状态机编程学习"><a href="#YouTube嵌入式状态机编程学习" class="headerlink" title="YouTube嵌入式状态机编程学习"></a>YouTube嵌入式状态机编程学习</h3><p>根据YouTube中嵌入式学习的视频，完整跟下来了解IAR环境的嵌入式软件开发。</p><h2 id="梅梅的毕业设计"><a href="#梅梅的毕业设计" class="headerlink" title="梅梅的毕业设计"></a>梅梅的毕业设计</h2><p>至少在这个月确认选题并写出开题报告和各类元器件购买</p><h2 id="工作方面"><a href="#工作方面" class="headerlink" title="工作方面"></a>工作方面</h2><p>工作中下一步是先将公司内产品模块从标准库转移到HAL库，在转移期间学习两种库的不同以及深入学习库底层是如何调用寄存器的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;八月计划&quot;&gt;&lt;a href=&quot;#八月计划&quot; class=&quot;headerlink&quot; title=&quot;八月计划&quot;&gt;&lt;/a&gt;八月计划&lt;/h1&gt;&lt;h2 id=&quot;书籍阅读&quot;&gt;&lt;a href=&quot;#书籍阅读&quot; class=&quot;headerlink&quot; title=&quot;书籍阅读&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="月度计划" scheme="http://example.com/categories/%E6%9C%88%E5%BA%A6%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="工作" scheme="http://example.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>2023七月计划</title>
    <link href="http://example.com/2023/07/30/2023%E4%B8%83%E6%9C%88%E8%AE%A1%E5%88%92/"/>
    <id>http://example.com/2023/07/30/2023%E4%B8%83%E6%9C%88%E8%AE%A1%E5%88%92/</id>
    <published>2023-07-30T07:09:51.000Z</published>
    <updated>2023-07-30T08:05:51.841Z</updated>
    
    <content type="html"><![CDATA[<h1 id="七月计划"><a href="#七月计划" class="headerlink" title="七月计划"></a>七月计划</h1><p>本月是入职参加工作的第一个月，计划为在公司中了解公司产品代码编写以及在工作中的职责，另外再读两本专业书籍。</p><h2 id="公司产品"><a href="#公司产品" class="headerlink" title="公司产品"></a>公司产品</h2><p>公司产品主要是各类的环境监测设备，例如温湿度监测模块，直流电采集模块，烟雾监测模块，水浸监测模块这种单独模块类型，也有集成类型的监测模块，目前没有接触。</p><h3 id="温湿度监测模块"><a href="#温湿度监测模块" class="headerlink" title="温湿度监测模块"></a>温湿度监测模块</h3><h4 id="主控芯片"><a href="#主控芯片" class="headerlink" title="主控芯片"></a>主控芯片</h4><p>STM32f103c8t6</p><h4 id="主要外设"><a href="#主要外设" class="headerlink" title="主要外设"></a>主要外设</h4><h5 id="W5500以太网接口"><a href="#W5500以太网接口" class="headerlink" title="W5500以太网接口"></a>W5500以太网接口</h5><p>板载到PCB板上通过网线与上位机进行连接，外设与主控芯片的通信方式为SPI通信，首先在程序中初始化主控芯片的SPI引脚，随后通过SPI通信方式建立socket的UDP连接，向对应IP和端口号接收和发送数据。</p><h5 id="0-96寸OLED显示屏"><a href="#0-96寸OLED显示屏" class="headerlink" title="0.96寸OLED显示屏"></a>0.96寸OLED显示屏</h5><p>IIC通信方式，通过主控芯片的两个GPIO引脚作为模拟信号来模拟IIC的SDA和SCL线，以此来向显示屏发送命令和数据，显示不同的内容。</p><h5 id="SHT30温湿度传感器"><a href="#SHT30温湿度传感器" class="headerlink" title="SHT30温湿度传感器"></a>SHT30温湿度传感器</h5><p>IIC通信方式，同样是两个GPIO口来模拟IIC信号来进行通信读取传感器发出的温湿度数据，可承受温度范围为-50℃~130℃。</p><p>主要模块是这些，在通信方面主要使用基于RS485电气特性的UART串口通信和W5500的网口通信，需要根据公司的通信协议在模块的代码中实现两种通信方式，分别使用网口和串口对模块进行通信。</p><h4 id="Boot-loader升级"><a href="#Boot-loader升级" class="headerlink" title="Boot loader升级"></a>Boot loader升级</h4><p>在软件代码编写完成后升级软件主要通过boot loader的方式进行升级，软件分为boot端和App端两部分，boot端仅保留系统升级的各项通信协议部分，其余协议不做保留。具体流程为模块上电首先进入boot状态，检查内部flash是否有升级标志，如果有升级标志进行软件的升级，如果没有则调用跳转函数跳转到App端代码的flash地址运行app端的代码。需要注意的是在进入boot后如果通信协议有延时的情况下需要在boot中等待是否有通信，如果有通信则开始进行软件升级，否则进入app端。</p><p>app端升级软件的协议为发送升级协议，接收到升级协议后重启模块进入boot模式，上位机监测模块是否处于boot模式，如果处于boot模式则开始发送升级软件的数据包，将要升级的软件刷写到模块的flash中，刷写完成后将升级标志位清空后跳转到app程序并运行。</p><h3 id="烟雾监测模块"><a href="#烟雾监测模块" class="headerlink" title="烟雾监测模块"></a>烟雾监测模块</h3><h4 id="主控芯片-1"><a href="#主控芯片-1" class="headerlink" title="主控芯片"></a>主控芯片</h4><p>STM32f103c8t6</p><h4 id="主要模块"><a href="#主要模块" class="headerlink" title="主要模块"></a>主要模块</h4><h5 id="MQ2烟雾传感器"><a href="#MQ2烟雾传感器" class="headerlink" title="MQ2烟雾传感器"></a>MQ2烟雾传感器</h5><p>烟雾模块主要使用了AO引脚输出模拟电压，烟雾浓度越大输出电压越高。此外烟雾传感器还有DO引脚，DO引脚的灵敏度通过传感器上的灵敏度进行调节，需要人为手动调节，所以没有使用，使用了AO引脚进行程序的烟雾浓度阈值设定。</p><p>目前在公司只编写了这两个模块的代码并进行了测试。</p><h2 id="专业书籍"><a href="#专业书籍" class="headerlink" title="专业书籍"></a>专业书籍</h2><p>本月读了两本程序员的入门书籍作为职业生涯的开始，希望可以对后续的道路起到指引作用。</p><p>在这里只列出书名，读书笔记会在后续单独写出博客。</p><h4 id="《程序员的自我修养》"><a href="#《程序员的自我修养》" class="headerlink" title="《程序员的自我修养》"></a>《程序员的自我修养》</h4><h4 id="《代码整洁之道》"><a href="#《代码整洁之道》" class="headerlink" title="《代码整洁之道》"></a>《代码整洁之道》</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;七月计划&quot;&gt;&lt;a href=&quot;#七月计划&quot; class=&quot;headerlink&quot; title=&quot;七月计划&quot;&gt;&lt;/a&gt;七月计划&lt;/h1&gt;&lt;p&gt;本月是入职参加工作的第一个月，计划为在公司中了解公司产品代码编写以及在工作中的职责，另外再读两本专业书籍。&lt;/p&gt;
&lt;h2 </summary>
      
    
    
    
    <category term="记录" scheme="http://example.com/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="月度计划" scheme="http://example.com/tags/%E6%9C%88%E5%BA%A6%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>123</title>
    <link href="http://example.com/2023/07/04/123/"/>
    <id>http://example.com/2023/07/04/123/</id>
    <published>2023-07-04T08:32:10.000Z</published>
    <updated>2023-07-04T08:32:10.731Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>2023.3.3</title>
    <link href="http://example.com/2023/03/03/2023-3-3/"/>
    <id>http://example.com/2023/03/03/2023-3-3/</id>
    <published>2023-03-03T13:35:40.000Z</published>
    <updated>2023-03-03T14:26:39.794Z</updated>
    
    <content type="html"><![CDATA[<p>这周去了首先对上周没有完成的工作进行收尾，一直没有进展，尝试了各种可能的情况，上午半天将所有组合进行了尝试，仍然有错误，下午就计划先进行python的工作，先花了两个小时过了一遍python的语法，比C语言简单太多了，直接上手去分析代码了，将代码的每个文件中每个类的作用大致分析了一下就下班了。</p><p>第二天将代码的状态机的思路捋清楚了，第三天去了上午半天画图，下午开会讨论。</p><p>软件工程和UML是非常重要的两门课，在学生阶段没有好好学，在工作中全都补了回来。</p><p>软件设计和程序设计是两个不同的方面，首先有需求分析，对软件进行构建模型，根据模型定制状态机图、类图、时序图一类用于描述软件的图示，软件开发的工作占比并不是很大，后面的软件测试在整个项目中的占比和软件开发的工作相差也不大，在软件开发的过程中，也应实时注意代码的质量，借助工具来分析代码的整体逻辑结构，在编码过程总发现问题的成本就要比之后在集成测试中发现问题成本要低很多。</p><p>在一个软件项目开始到结束的过程中，软件开发工作占比并不是很大，所以开发也没有我想象中的高大上，但是兴趣使然就是想做开发的工作。</p><p>在工作过程中我对自己学习能力的自信逐步上升，也对自己越来越自信，认为在工作中遇到总能找到解决的方法，在学习过程中，只要是和专业相关我想学的东西也肯定是能学会的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这周去了首先对上周没有完成的工作进行收尾，一直没有进展，尝试了各种可能的情况，上午半天将所有组合进行了尝试，仍然有错误，下午就计划先进行python的工作，先花了两个小时过了一遍python的语法，比C语言简单太多了，直接上手去分析代码了，将代码的每个文件中每个类的作用大致</summary>
      
    
    
    
    
    <category term="记录" scheme="http://example.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>2023.2.27</title>
    <link href="http://example.com/2023/02/27/2023-2-27/"/>
    <id>http://example.com/2023/02/27/2023-2-27/</id>
    <published>2023-02-27T13:20:20.000Z</published>
    <updated>2023-02-27T13:48:37.217Z</updated>
    
    <content type="html"><![CDATA[<p>好久没有过记录了，记一下最近工作时形成的习惯和工作的感悟吧。</p><h1 id="工作习惯"><a href="#工作习惯" class="headerlink" title="工作习惯"></a>工作习惯</h1><p>最开始给了我一个笔记本用来记东西，当时工作的时候都是火急火燎的直接在txt上面记东西，还在想别人为什么要记在笔记本上面，记在脑子里当下就处理不好么，直到有一天脑子实在是承受不住，需要将工作思路梳理慢慢地清楚再继续下一步的工作，并将工作时要进行的步骤也记在本子上，有了这个习惯后工作起来一步一步地执行，将要做的和想做的记在本子上，梳理好思路再干活，就很少出现以前脑子总是在高速运转时那么累了。</p><h1 id="工作感悟"><a href="#工作感悟" class="headerlink" title="工作感悟"></a>工作感悟</h1><p>🤔在和别人交代工作时不应该显摆自己比别人会的多的地方，应虚心求教，在这两个月的时间里改掉了工作时很狂的心态，哪里不会问哪里，每个人都可以教我，毕竟每个人都做过我没做过的工作，在遇到困难时直接请教就好。</p><h1 id="工作环境"><a href="#工作环境" class="headerlink" title="工作环境"></a>工作环境</h1><p>因为是外企，公司的氛围我很喜欢，虽然偶尔会有一些做不完的工作需要加班，但这个弹性工作制度还是挺好的，满足了我想要提前下班回家的需要，还有同事之间没有勾心斗角，在请教问题时都是知无不言言无不尽，正好符合我的为人，有了平等的对待，同事对我这样，我也对同事真诚，把会的全部说了出来。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;好久没有过记录了，记一下最近工作时形成的习惯和工作的感悟吧。&lt;/p&gt;
&lt;h1 id=&quot;工作习惯&quot;&gt;&lt;a href=&quot;#工作习惯&quot; class=&quot;headerlink&quot; title=&quot;工作习惯&quot;&gt;&lt;/a&gt;工作习惯&lt;/h1&gt;&lt;p&gt;最开始给了我一个笔记本用来记东西，当时工作的时候</summary>
      
    
    
    
    
    <category term="记录" scheme="http://example.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>2023223</title>
    <link href="http://example.com/2023/02/23/2023-2-23/"/>
    <id>http://example.com/2023/02/23/2023-2-23/</id>
    <published>2023-02-23T13:58:44.000Z</published>
    <updated>2023-02-23T14:01:38.452Z</updated>
    
    
    
    
    
    <category term="记录" scheme="http://example.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>git_push</title>
    <link href="http://example.com/2023/01/07/git-push/"/>
    <id>http://example.com/2023/01/07/git-push/</id>
    <published>2023-01-07T03:25:43.000Z</published>
    <updated>2023-01-07T03:43:11.879Z</updated>
    
    <content type="html"><![CDATA[<p>目前是仅供个人使用</p><p>首先查看当前git分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -v</span><br></pre></td></tr></table></figure><p>查看当前git状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p>将当前git路径下的文件添加到本地仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>推送之前先提交一条信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;msg&quot;</span><br></pre></td></tr></table></figure><p>推送到远端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin main</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目前是仅供个人使用&lt;/p&gt;
&lt;p&gt;首先查看当前git分支&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;</summary>
      
    
    
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>iee_intern_record</title>
    <link href="http://example.com/2023/01/07/iee-intern-record/"/>
    <id>http://example.com/2023/01/07/iee-intern-record/</id>
    <published>2023-01-07T02:54:35.000Z</published>
    <updated>2023-01-07T03:42:42.383Z</updated>
    
    <content type="html"><![CDATA[<p>今天周六，闲来无事，记录一下近期的实习工作。</p><h1 id="第一周"><a href="#第一周" class="headerlink" title="第一周"></a>第一周</h1><p>​从12月19日开始工作谈起，第一天发给了我一份培训资料，让我自己学习，不懂的问她，先从软件测试看起，软件测试培训资料讲解了公司的测试流程，一边看一边记了一些笔记，简简单单看完了，软件测试完成之后是CAN总线协议，反反复复看了几遍差不多了解了之后收到了工作任务邮件，分析一个测试报告并把理解和疑问列出，最开始拿到的时候一头雾水，慢慢摸索找到了解决办法，使用UDS诊断进行分析后完成任务，完成之后预约了一个会议进行了说明，汇报工作时把对报告的理解和疑问进行了说明，依此解答了我的疑问并对CAN协议进行了提问，整个过程轻松愉快。</p><p>​在第三天工作时来到了办公室进行工作，办公室还没收拾好，很乱，收拾办公室就用了将近一天的时间，让我一度认为这里工作的效率也太低了，不是很符合我对工作的态度。但在后面也就习惯了这种工作氛围，轻松愉快的工作氛围还是很不错的。</p><p>​去办公室办公开始依旧是看培训资料，看完一个阶段就进行了一些交流，每次交流都能了解到很多东西。</p><h1 id="第二周"><a href="#第二周" class="headerlink" title="第二周"></a>第二周</h1><p>​这周本打算周一就把培训资料学习完，学习完后进行下一阶段，周一下午时又交流了一个小时，又因为弄考勤打卡和填写资料耽搁了一些时间，一天没有弄完，留到第二天才弄完，之后是弄一个体系架构的图示。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天周六，闲来无事，记录一下近期的实习工作。&lt;/p&gt;
&lt;h1 id=&quot;第一周&quot;&gt;&lt;a href=&quot;#第一周&quot; class=&quot;headerlink&quot; title=&quot;第一周&quot;&gt;&lt;/a&gt;第一周&lt;/h1&gt;&lt;p&gt;​		从12月19日开始工作谈起，第一天发给了我一份培训资料，让我自己学</summary>
      
    
    
    
    
    <category term="实习" scheme="http://example.com/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>iee_training</title>
    <link href="http://example.com/2022/12/19/iee-training/"/>
    <id>http://example.com/2022/12/19/iee-training/</id>
    <published>2022-12-19T02:07:59.000Z</published>
    <updated>2022-12-20T06:19:43.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Validation-process"><a href="#Validation-process" class="headerlink" title="Validation_process"></a>Validation_process</h1><h2 id="输入输出文档和报告"><a href="#输入输出文档和报告" class="headerlink" title="输入输出文档和报告"></a>输入输出文档和报告</h2><p>测试工程师接收软件工程师输入的软件开发计划和预计日期，测试工程师输出测试计划和预计结束时间，生成记录由软件工程师进行评价，根据不同的解决方案提交测试报告，最后总结报告。</p><p>具体工作内容处于软件开发V模型的第八个阶段</p><h2 id="测试目的"><a href="#测试目的" class="headerlink" title="测试目的"></a>测试目的</h2><p>首先确认软件需求，测试之后认证没问题后将软件定位为release。</p><h2 id="测试步骤"><a href="#测试步骤" class="headerlink" title="测试步骤"></a>测试步骤</h2><h3 id="准备测试"><a href="#准备测试" class="headerlink" title="准备测试"></a>准备测试</h3><p>产出软件工程计划，确定测试计划，复习记录</p><h3 id="设计测试用例"><a href="#设计测试用例" class="headerlink" title="设计测试用例"></a>设计测试用例</h3><p>产出测试版本管理（baseline），例如git版本管理，生成测试用例复习日志和脚本复习日志</p><h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><p>生成测试复习报告并上传SVN</p><h3 id="通过报告"><a href="#通过报告" class="headerlink" title="通过报告"></a>通过报告</h3><p>产出测试报告分析文件，有效总结报告，样例综述文件，复习日志文件</p><h2 id="测试用例设计"><a href="#测试用例设计" class="headerlink" title="测试用例设计"></a>测试用例设计</h2><p>读软件需求文档和软件性能，创建新的测试用例，生成完全可以覆盖需求的测试用例</p><h2 id="触发任务"><a href="#触发任务" class="headerlink" title="触发任务"></a>触发任务</h2><p>创建测试用例添加到SRS，自动化生成脚本，debug测试用例，验证测试用例，准备复习测试用例（baseline，复习文件，组织会议），更新测试用例并组织确认测试用例已经修改，再做一次baseline，自动生成脚本，更新CANoe工程，关闭测试用例任务，将确认无误的脚本上传到SVN。</p><h2 id="确认执行过程"><a href="#确认执行过程" class="headerlink" title="确认执行过程"></a>确认执行过程</h2><p>执行测试用例并提交测试结果，提交结果后跟进软件开发人员修复后的功能，将功能测试无误后提交测试报告</p><p>在测试过程中应确保测试用例完全覆盖软件需求</p><h2 id="测试报告"><a href="#测试报告" class="headerlink" title="测试报告"></a>测试报告</h2><p>分析报告并创建报告文件，检查测试用例是否有问题，有问题时尝试重新跑一下检查是否还存在问题，不存在问题则记录测试用例问题在分析文件中，存在问题则重新执行确定，测试用例无问题后生成分析报告和总结报告，更新执行触发任务。</p><h1 id="CAN入门"><a href="#CAN入门" class="headerlink" title="CAN入门"></a>CAN入门</h1><p>can由两根线进行通信，通过电位差来判断总线电平</p><p>接到同一总线上传输速率需要保持一致。</p><h2 id="CAN特点"><a href="#CAN特点" class="headerlink" title="CAN特点"></a>CAN特点</h2><h3 id="多主控制"><a href="#多主控制" class="headerlink" title="多主控制"></a>多主控制</h3><p>总线空闲时，所有单元都可开始发送消息，最先访问总线的单元可获得发送权，多个单元同时发送时，根据优先级来确定哪个单元获得发送权。</p><h3 id="消息的发送"><a href="#消息的发送" class="headerlink" title="消息的发送"></a>消息的发送</h3><p>空闲时所有单元都可发送信息，两个以上单元同时开始发送消息时，根据ID进行仲裁，仲裁获胜的单元可以继续发送消息，仲裁失利的单元继续停止发送并进行接受工作，随后参与下次仲裁。</p><h3 id="系统的柔软性"><a href="#系统的柔软性" class="headerlink" title="系统的柔软性"></a>系统的柔软性</h3><p>添加单元时对其他单元的软硬件及应用层没有影响。</p><h3 id="通信速度"><a href="#通信速度" class="headerlink" title="通信速度"></a>通信速度</h3><p>同一网络中所有单元必须设定成统一的通信速度。</p><h3 id="远程数据请求"><a href="#远程数据请求" class="headerlink" title="远程数据请求"></a>远程数据请求</h3><p>可通过发送“遥控帧”请求其他单元发送数据。</p><h3 id="错误检测"><a href="#错误检测" class="headerlink" title="错误检测"></a>错误检测</h3><p>所有的单元都可以检测错误，检测出错误后会立即通知其他单元，正在发送消息的单元一旦检测出错误，会强制结束当前的发送，强制结束发送的单元会不断地重新发送，直到成功发送为止。</p><h3 id="故障封闭"><a href="#故障封闭" class="headerlink" title="故障封闭"></a>故障封闭</h3><p>can可以根据错误类型将故障单元隔离出去。</p><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><p>can对连接单元数量没有限制，但连接单元手电气负载的影响，连接单元越多，通信速度越低。</p><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><p>三种错误状态</p><p>错误状态存在计数值</p><p>发送错误计数值在0<del>127并且接受错误计数值在0</del>127为主动错误状态</p><p>发送错误计数值在128<del>255或接受错误计数值在128</del>255为被动错误状态</p><p>256~为总线关闭态</p><p>首先通过计数器来判断单元处于哪种错误状态，错误状态不同则通信处理也不同。</p><h3 id="主动错误状态"><a href="#主动错误状态" class="headerlink" title="主动错误状态"></a>主动错误状态</h3><h3 id="被动错误状态"><a href="#被动错误状态" class="headerlink" title="被动错误状态"></a>被动错误状态</h3><h3 id="总线关闭态"><a href="#总线关闭态" class="headerlink" title="总线关闭态"></a>总线关闭态</h3><h2 id="CAN协议基本概念"><a href="#CAN协议基本概念" class="headerlink" title="CAN协议基本概念"></a>CAN协议基本概念</h2><p>can协议涵盖了OSI七层模型中的传输层，数据链路层和物理层三层</p><h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>再发送控制</p><h3 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h3><h4 id="LLC"><a href="#LLC" class="headerlink" title="LLC"></a>LLC</h4><p>接收消息的选择，过载通知，错误恢复功能</p><h4 id="MAC"><a href="#MAC" class="headerlink" title="MAC"></a>MAC</h4><p>消息的帧化，连接控制方式，数据冲突时的仲裁，故障扩散抑制功能，错误通知，错误检测，应答方式，通信方式。</p><h3 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h3><p>位编码方式，位时序，同步方式</p><p>高速和低速的共同点为通过电位差来输出显性或隐性电平。</p><p>显性电平和隐性电平都有其对应的电位差，在电位差范围内即为有效电平</p><p>线长影响通信速率</p><p>总线上执行逻辑上的线“与”时，显性电平为“0”，隐性电平为“1”</p><h2 id="帧的种类"><a href="#帧的种类" class="headerlink" title="帧的种类"></a>帧的种类</h2><h3 id="数据帧"><a href="#数据帧" class="headerlink" title="数据帧"></a>数据帧</h3><p>用于发送单元向接受单元传送数据的帧</p><p>分为标准帧和拓展帧</p><h4 id="数据长度和字节数的关系"><a href="#数据长度和字节数的关系" class="headerlink" title="数据长度和字节数的关系"></a>数据长度和字节数的关系</h4><p>DLC决定可以传输的数据长度，DLC有4个bit位，最大传输长度为1000，即8个字节的数据。</p><h4 id="RTR位"><a href="#RTR位" class="headerlink" title="RTR位"></a>RTR位</h4><p>为0代表接下来是数据帧</p><p>为1代表接下来是遥控帧</p><h4 id="IDE位"><a href="#IDE位" class="headerlink" title="IDE位"></a>IDE位</h4><p>0是显性，1是隐性</p><h4 id="数据段"><a href="#数据段" class="headerlink" title="数据段"></a>数据段</h4><p>包含0~8个字节，从高位开始输出</p><h4 id="CRC段"><a href="#CRC段" class="headerlink" title="CRC段"></a>CRC段</h4><p>检验帧传输错误的帧</p><h4 id="ACK段"><a href="#ACK段" class="headerlink" title="ACK段"></a>ACK段</h4><p>用来确定是否正确接收</p><h3 id="遥控帧"><a href="#遥控帧" class="headerlink" title="遥控帧"></a>遥控帧</h3><p>用于接受单元向具有相同ID的发送单元请求数据的帧</p><p>没有数据帧的数据段</p><p>RTR为为1</p><h3 id="错误帧"><a href="#错误帧" class="headerlink" title="错误帧"></a>错误帧</h3><p>用于检测出错误时向其他单元通知错误的帧</p><h3 id="过载帧"><a href="#过载帧" class="headerlink" title="过载帧"></a>过载帧</h3><p>用于接受单元通知其尚未做好接受准备的帧</p><h3 id="帧间隔"><a href="#帧间隔" class="headerlink" title="帧间隔"></a>帧间隔</h3><p>用于将数据帧及遥控帧与前面的帧分离开来的帧</p><p>7个隐性位位结束，3个隐性位为间隔</p><p>帧间隔用分割数据帧和遥控帧的帧，将数据帧和遥控帧与前面的错误帧和过载帧分开，过载帧和错误帧前不能插入帧间隔。</p><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><p>在仲裁过程中连续输出显性电平最多的单元获胜</p><p>在标准格式和拓展格式对比中，标准格式的RTR位为显性位的具有优先权，可继续发送</p><h3 id="位填充"><a href="#位填充" class="headerlink" title="位填充"></a>位填充</h3><h4 id="发送单元"><a href="#发送单元" class="headerlink" title="发送单元"></a>发送单元</h4><p>发送数据帧和遥控帧时，当相同电平持续5位，则需要在下一位插入1位与前五位相反的电平</p><h4 id="接受单元"><a href="#接受单元" class="headerlink" title="接受单元"></a>接受单元</h4><p>当接收到连续5位相同的电平时，需要删除下一位再进行接收，如果此时第六位电平与前五位相同，将被始位错误并发送错误帧</p><h1 id="CAN-Diagnostic"><a href="#CAN-Diagnostic" class="headerlink" title="CAN Diagnostic"></a>CAN Diagnostic</h1><p>FF:first frame 单框架，传输数据长度小于7</p><p>FF_DL:first frame data length 单框架数据长度</p><p>BS: block size</p><p>CF: consecutive frame 连续性框架</p><p>FC: flow control 流控制</p><p>FS: flow status 流状态</p><p>物理地址和功能性地址</p><p>物理地址支持所有网络分层类型的消息</p><p>功能性地址只支持单框架的交流</p><p>Multiple frame 多框架支持数据长度&gt;7&amp;&amp;&lt;4095</p><p>示例中0x10 0x83</p><p>其中后12位为传输的数据长度，长度为0x083</p><p>实例中0x30，0x08，0x0A为流控制框架中的三个状态</p><p>其中0x30的后四位为0，表示发送方继续发送连续框架并且接收方准备去接收Consecutive frames的BS数量最大值</p><p>0x08为在没有流控制框架下能够接收到的最大连续帧的数目</p><p>0x0A为分隔0x0A秒</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Validation-process&quot;&gt;&lt;a href=&quot;#Validation-process&quot; class=&quot;headerlink&quot; title=&quot;Validation_process&quot;&gt;&lt;/a&gt;Validation_process&lt;/h1&gt;&lt;h2 id=&quot;输</summary>
      
    
    
    
    
    <category term="实习" scheme="http://example.com/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>2022.12.9</title>
    <link href="http://example.com/2022/12/09/2022-12-9/"/>
    <id>http://example.com/2022/12/09/2022-12-9/</id>
    <published>2022-12-09T09:45:52.000Z</published>
    <updated>2022-12-09T10:06:03.597Z</updated>
    
    <content type="html"><![CDATA[<p>有一段时间没记录过了，今天因为房租的事情有些惆怅，感觉打工就是在给房东打工，当时真不该图近租一个这么贵的房子，省了很多时间，但时间是用金钱换来的，这金钱不是我现在实习生的工资能抵偿的，以至于下一个季度的房租还得向父母开口要，又是六千块钱😔，本想着向父母要了那一万块钱就不再向家里要钱了，可要交房租的时间还是赶得紧，和暑假工作时交房租一样，只不过现在这个房租贵了一倍不止，让我来北京之后产生了胆怯心理，理想很美好，每个月五千除去生活成本能剩下将近两千块钱，可工资和工作时间挂钩，我又不禁想多上几天班，可惜双休又碰上春节，第二个月最多就是四千五左右，交第二个季度的房租都不够。六月三十号之后能不能在这个公司继续干还是个未知数，啊！！！！，因为金钱产生了好多负面情绪，开头难，这个难到了我要承受的时候真的是有点扛不住了。</p><p>今天开始就努力做好每天要做的事情吧，做到尽人事而听天命，父母供我在这里实习就做到不辜负父母的期望。</p><p>当现实压到我身上时我才发现我是那么的不堪一击，立马就被压得喘不上气。没有了那么多的娱乐事件，被现实压着推着一直朝前走，虽然是这么想的，但今天又做了点什么呢，想想真惭愧，就学了一些软件工程的课程，只是了解了一些皮毛，去了公司好好工作吧，争取可以转正。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;有一段时间没记录过了，今天因为房租的事情有些惆怅，感觉打工就是在给房东打工，当时真不该图近租一个这么贵的房子，省了很多时间，但时间是用金钱换来的，这金钱不是我现在实习生的工资能抵偿的，以至于下一个季度的房租还得向父母开口要，又是六千块钱😔，本想着向父母要了那一万块钱就不再</summary>
      
    
    
    
    
    <category term="记录" scheme="http://example.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>2022.11.1</title>
    <link href="http://example.com/2022/11/01/2022-11-1/"/>
    <id>http://example.com/2022/11/01/2022-11-1/</id>
    <published>2022-11-01T11:28:54.000Z</published>
    <updated>2022-11-01T11:53:46.722Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>​之前一直在投简历，最近没有着急投简历，有几家联系了之后都是商量的离校之后再联系，与其这样还不如在离校之前再开始投简历，就停止了投简历，目前可以从事的方向有医疗设备，电气检测，汽车行业三个方向，个人倾向于做汽车行业方向，目前通过了一个做汽车传感器的外企的面试，说明了薪资待遇和工作时间之类的，薪资待遇实在不是很高，除去生活成本大概还剩两千块钱，如果正式入职的话还得去廊坊工作，在哪里工作无所谓，目前没有经济压力，只是在想可不可以既满足我的工作方向工资待遇也不是很低。</p><p>​明天有一个医疗器械公司的面试，技术主管面试，具体时间待定，在面试之前该干嘛干嘛，这家包吃住，薪资待遇也不低，但工作方向不是很喜欢，现在先不想这些，先通过面试再说。</p><p>​电气检测公司主动联系我，加上微信之后看我意愿然后安排面试，在朋友圈中看到这个公司一直在加班，有点哈人，目前就业城市定在北京，保定的话现在北京工作个三年多再回保定工作。</p><h1 id="今天的事情"><a href="#今天的事情" class="headerlink" title="今天的事情"></a>今天的事情</h1><p>今天报名四级，上午耽误了半天还没报上，下午摸鱼加学习，晚上把之前做的项目梳理了一下思路，外企面试时乌鲁乌鲁说了一堆，驴唇不对马嘴，这次长记性了。在下午时收到微信外企那儿已经确定这个时间没有问题，让我在11月21日开始的一周时间内做一次入职体检，体检结果发给她之后没问题的话发实习生offer，下午报上了四级，晚上再背一会儿单词，这一天就这么过去了。</p><h1 id="今日以后"><a href="#今日以后" class="headerlink" title="今日以后"></a>今日以后</h1><p>如果通过医疗器械公司的面试的话，小摆两天，嘿嘿嘿🤤，然后继续毕业设计的制作，就这些。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前情提要&quot;&gt;&lt;a href=&quot;#前情提要&quot; class=&quot;headerlink&quot; title=&quot;前情提要&quot;&gt;&lt;/a&gt;前情提要&lt;/h1&gt;&lt;p&gt;​	之前一直在投简历，最近没有着急投简历，有几家联系了之后都是商量的离校之后再联系，与其这样还不如在离校之前再开始投简历，就</summary>
      
    
    
    
    
    <category term="记录" scheme="http://example.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>STM32Collection</title>
    <link href="http://example.com/2022/11/01/STM32Collection/"/>
    <id>http://example.com/2022/11/01/STM32Collection/</id>
    <published>2022-11-01T11:03:56.000Z</published>
    <updated>2022-11-01T11:27:38.927Z</updated>
    
    <content type="html"><![CDATA[<h1 id="菜单切换"><a href="#菜单切换" class="headerlink" title="菜单切换"></a>菜单切换</h1><p>​使用傻孩子菜单设计进行菜单切换，使用结构体记录菜单信息，记录的信息有同级菜单内界面个数，每个界面有自己的固定位置，记录在结构体中，正在运行的界面，按键所在位置（当前按键数值），菜单应执行的函数，使用函数指针进行存储，菜单对应选项的按键处理函数指针，指向子节点的指针和指向父节点的指针。</p><p>​在程序内创建结构体数组设定菜单的数量，包含同级菜单和子菜单，并对结构体数组进行初始化，初始化结构体内每个成员变量的内容。</p><p>​根据界面切换函数来根据键码值运行键码值对应的菜单界面。在同级界面进行切换时如果切换到同级菜单的最后一个界面，根据当前界面的坐标和最大菜单界面数进行比较来进行菜单切换。</p><h1 id="界面刷新"><a href="#界面刷新" class="headerlink" title="界面刷新"></a>界面刷新</h1><p>将缓存内容通过OLED_Display函数调用OLED写函数写入OLED屏。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;菜单切换&quot;&gt;&lt;a href=&quot;#菜单切换&quot; class=&quot;headerlink&quot; title=&quot;菜单切换&quot;&gt;&lt;/a&gt;菜单切换&lt;/h1&gt;&lt;p&gt;​	使用傻孩子菜单设计进行菜单切换，使用结构体记录菜单信息，记录的信息有同级菜单内界面个数，每个界面有自己的固定位置，记录在</summary>
      
    
    
    
    
    <category term="STM32" scheme="http://example.com/tags/STM32/"/>
    
  </entry>
  
  <entry>
    <title>嵌入式Linux</title>
    <link href="http://example.com/2022/10/24/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/"/>
    <id>http://example.com/2022/10/24/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/</id>
    <published>2022-10-24T01:33:41.000Z</published>
    <updated>2022-11-25T02:54:33.783Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置VMWARE使用双网卡连接开发板"><a href="#配置VMWARE使用双网卡连接开发板" class="headerlink" title="配置VMWARE使用双网卡连接开发板"></a>配置VMWARE使用双网卡连接开发板</h1><p>使用网卡连接开发板后在此电脑-&gt;设置-&gt;设备管理器-&gt;网络适配器中查看是否有连接</p><p>在虚拟网络适配器中的桥接模式选择指定的开发板网卡</p><h2 id="Linux配置ip"><a href="#Linux配置ip" class="headerlink" title="Linux配置ip"></a>Linux配置ip</h2><p>在虚拟机中setting设置网络，ip为192.168.5.11</p><p><img src="https://hexo-1314225961.cos.ap-nanjing.myqcloud.com/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/linux_ip.png"></p><h2 id="Windows配置ip"><a href="#Windows配置ip" class="headerlink" title="Windows配置ip"></a>Windows配置ip</h2><p>在网络适配器中指定ip</p><p><img src="https://hexo-1314225961.cos.ap-nanjing.myqcloud.com/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/win_ip.png"></p><h1 id="连接串口"><a href="#连接串口" class="headerlink" title="连接串口"></a>连接串口</h1><p>用usb线将开发板与电脑连接起来，在设备管理器中显示了串口后在MobaXterm中添加串口，首先点击Session，在里面点击Serial，将波特率改为115200，之后选择高级选项Advance Serial setting选择8N1控制流为None，完成后点击ok，进入连接后用户名为root，输入root即可登录</p><h1 id="开发板挂在ubuntu的NFS目录"><a href="#开发板挂在ubuntu的NFS目录" class="headerlink" title="开发板挂在ubuntu的NFS目录"></a>开发板挂在ubuntu的NFS目录</h1><p>NFS（Net File System）</p><p>在前面配置环境时已经开启了访问权限并启动了NFS服务</p><p>通过网络访问Ubuntu目录</p><p>mount -t nfs -o nolock,vers&#x3D;3 192.168.5.11:&#x2F;home&#x2F;book&#x2F;nfs_root </p><p>使用该命令即可挂载Ubuntu目录</p><h1 id="开发板的第一个APP"><a href="#开发板的第一个APP" class="headerlink" title="开发板的第一个APP"></a>开发板的第一个APP</h1><p>首先在虚拟机中进行交叉编译<strong>arm-buildroot-linux-gnueabihf-gcc -o hello hello.c</strong></p><p>编译完成后将目标文件拷贝至nfs服务目录中<strong>cp hello &#x2F;home&#x2F;book&#x2F;nfs_rootfs</strong></p><p>开发板挂载nfs服务目录 </p><p><strong>mount -t nfs -o nolock,vers&#x3D;3</strong> <strong>192.168.5.11:&#x2F;home&#x2F;book&#x2F;nfs_rootfs &#x2F;mnt</strong></p><p>将目录中的目标文件拷贝到开发板目录中<strong>cp &#x2F;mnt&#x2F;hello .&#x2F;hello</strong></p><p>将目标文件添加可执行命令<strong>chmod +x hello</strong></p><p>执行目标文件**.&#x2F;hello**</p><p>将文件交叉编译后复制到Ubuntu的nfs服务目录下，开发板经过nfs挂载Ubuntu的目录后将相应的文件拷贝到开发板上，通过chmod添加可执行权限后执行程序即可。</p><p><img src="https://hexo-1314225961.cos.ap-nanjing.myqcloud.com/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux/first_app.png"></p><h1 id="开发板的第一个驱动"><a href="#开发板的第一个驱动" class="headerlink" title="开发板的第一个驱动"></a>开发板的第一个驱动</h1><h2 id="编译替换内核"><a href="#编译替换内核" class="headerlink" title="编译替换内核"></a>编译替换内核</h2><p>根据Linux开发手册中提供的指令依次执行</p><p>首先编译内核，然后编译设备树，编译完成后将设备树拷贝到对应目录。</p><p>编译完成后更换开发板上原有的驱动程序</p><h1 id="GCC编译过程"><a href="#GCC编译过程" class="headerlink" title="GCC编译过程"></a>GCC编译过程</h1><h2 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h2><p>-E 生成.i文件，具体工作为将程序中的头文件和宏定义进行展开</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>-s 生成.s文件，将预处理文件编译成汇编码</p><h2 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h2><p>-c 生成.o文件，将汇编码文件编译成机器指令文件</p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>-o 将若干个.o文件连接成一个可执行文件</p><h2 id="反汇编"><a href="#反汇编" class="headerlink" title="反汇编"></a>反汇编</h2><p>将链接生成的文件进行反汇编生成汇编码文件</p><h2 id="常用选项"><a href="#常用选项" class="headerlink" title="常用选项"></a>常用选项</h2><p>-I 指定查找头文件路径</p><h3 id="压缩成静态库"><a href="#压缩成静态库" class="headerlink" title="压缩成静态库"></a>压缩成静态库</h3><p>ar crs xxx.a xxx.o</p><p>链接时将静态库和目标文件链接到一起即可</p><h1 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h1><h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><p>目标文件：依赖文件</p><p>TAB 命令</p><p>当目标文件不存在或者目标文件最近有过更改时，执行目标命令</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><p>%</p><p>命令中的$@表示目标文件</p><p>$&lt;表示第一个依赖文件</p><p>$^表示所有的依赖文件</p><p>clean清除指定文件</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>使用变量时$(x),x为变量</p><h4 id="即使变量"><a href="#即使变量" class="headerlink" title="即使变量"></a>即使变量</h4><p>即简单变量，A :&#x3D; XXX ，A的值即刻确定</p><h4 id="延时变量"><a href="#延时变量" class="headerlink" title="延时变量"></a>延时变量</h4><p>B &#x3D; XXX , B的值使用到时才确定</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>?&#x3D;，如果第一次定义才起效，如果在前面该变量已定义则忽略这句</p><p>+&#x3D;,  附加，它是即使变量还是延时变量取决于前面的定义</p><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="foreach-f-var1-var2"><a href="#foreach-f-var1-var2" class="headerlink" title="$(foreach f, var1, var2)"></a>$(foreach f, var1, var2)</h4><p>功能类似于foreach</p><h4 id="filter-pattern-text"><a href="#filter-pattern-text" class="headerlink" title="$(filter pattern, text)"></a>$(filter pattern, text)</h4><p>在text中取出符合pattern格式的值</p><h4 id="filter-out-pattern-text"><a href="#filter-out-pattern-text" class="headerlink" title="$(filter-out pattern, text)"></a>$(filter-out pattern, text)</h4><p>在text中取出不符合pattern格式的值</p><h4 id="wildcard-pattern"><a href="#wildcard-pattern" class="headerlink" title="$(wildcard pattern)"></a>$(wildcard pattern)</h4><p>取出文件名格式为pattern的文件</p><h4 id="patsubst-src-dst-src-file"><a href="#patsubst-src-dst-src-file" class="headerlink" title="$(patsubst, src, dst, src_file)"></a>$(patsubst, src, dst, src_file)</h4><p>在src_file变量中取出src的数值替换成dst</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="生成依赖文件"><a href="#生成依赖文件" class="headerlink" title="生成依赖文件"></a>生成依赖文件</h4><p>gcc -M -MF x.d x.c</p><p>x.d为x.c所需要的依赖文件</p><p>在Makefile文件中添加的参数为 -MD -MF .$@.d</p><h1 id="文件IO"><a href="#文件IO" class="headerlink" title="文件IO"></a>文件IO</h1><p>访问虚拟文件需要先进行挂载</p><h2 id="通用IO模型"><a href="#通用IO模型" class="headerlink" title="通用IO模型"></a>通用IO模型</h2><p>open&#x2F;read&#x2F;write&#x2F;lseek&#x2F;close</p><h2 id="内核接口实现"><a href="#内核接口实现" class="headerlink" title="内核接口实现"></a>内核接口实现</h2><p>在使用open&#x2F;read&#x2F;write此类函数时会触发异常，调用内核层级的 sys_open,sys_read函数</p><h1 id="字符编码方式"><a href="#字符编码方式" class="headerlink" title="字符编码方式"></a>字符编码方式</h1><h2 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h2><p>每个汉字都对应一个数值</p><h2 id="字符设备驱动程序"><a href="#字符设备驱动程序" class="headerlink" title="字符设备驱动程序"></a>字符设备驱动程序</h2><h2 id="块设备驱动程序"><a href="#块设备驱动程序" class="headerlink" title="块设备驱动程序"></a>块设备驱动程序</h2><h1 id="交叉编译程序"><a href="#交叉编译程序" class="headerlink" title="交叉编译程序"></a>交叉编译程序</h1><p>编译程序时如何寻找头文件</p><p>链接时如何寻找头文件</p><p>运行时如何寻找头文件</p><p>找不到头文件时可以将缺少的头文件放入系统目录</p><h1 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信"></a>网络通信</h1><h2 id="三要素"><a href="#三要素" class="headerlink" title="三要素"></a>三要素</h2><p>源、目的、长度</p><p>两个相同的客户端连接同一个服务器时，连接时客户端的IP是相同的，但端口是不同的，服务器根据<strong>源端口</strong></p><p>来区分一个IP下的两个连接</p><h2 id="服务器创建连接"><a href="#服务器创建连接" class="headerlink" title="服务器创建连接"></a>服务器创建连接</h2><p>创建套接字</p><p>绑定自己的IP和端口号</p><p>开始监听数据</p><p>监听到之后进行建立连接</p><p>send和recv进行收发</p><p>UDP没有监听数据和建立连接的操作</p><h2 id="客户端建立连接"><a href="#客户端建立连接" class="headerlink" title="客户端建立连接"></a>客户端建立连接</h2><p>创建套接字</p><p>connect与服务器建立连接</p><p>send和recv进行收发</p><h1 id="串口"><a href="#串口" class="headerlink" title="串口"></a>串口</h1><p>打印信息</p><p>外接模块</p><p>波特率</p><p>格式：数据位，停止位，校验位</p><p>发送时双方约定波特率，即每一位占用的时间</p><p>在起始电平为高电平时，ARM拉低，保持1bit时间，即为开始位，PC在低电平处开始处计时，ARM根据数据驱动TXD电平，逐位发送数据，PC机在数据位的中间读取引脚状态来接收数据，传输数据完成后传输停止位结束本次数据传输。</p><p>使用8n1数据传输方式时传输一字节需要10位，一秒钟可以传输11520个字节</p><h1 id="TTY体系"><a href="#TTY体系" class="headerlink" title="TTY体系"></a>TTY体系</h1><p>tty通过调制解调器或无线连接串口接入计算机</p><p>tty0为当前前台运行的虚拟终端</p><h2 id="terminal和console的差别"><a href="#terminal和console的差别" class="headerlink" title="terminal和console的差别"></a>terminal和console的差别</h2><p>console是某一个terminal</p><p>terminal并不都是console</p><p>权限比终端大</p><h2 id="TTY驱动程序框架"><a href="#TTY驱动程序框架" class="headerlink" title="TTY驱动程序框架"></a>TTY驱动程序框架</h2><p>PC机通过UART发送字符给ARM板，ARM板先使用UART进行接收，随后上传给驱动层，驱动层将字符上传至行规程，行规程将数据经由ARM板发送回PC机进行回显。</p><h1 id="IIC"><a href="#IIC" class="headerlink" title="IIC"></a>IIC</h1><h2 id="传输过程"><a href="#传输过程" class="headerlink" title="传输过程"></a>传输过程</h2><h3 id="发数据"><a href="#发数据" class="headerlink" title="发数据"></a>发数据</h3><p>发出起始信号，发出地址和方向，等待回应，发送数据，等待回应，结束发送</p><h3 id="接收数据"><a href="#接收数据" class="headerlink" title="接收数据"></a>接收数据</h3><p>发送起始信号，发送地址和方向，等待回应，传输数据，等待回应，结束发送</p><h2 id="IIC信号"><a href="#IIC信号" class="headerlink" title="IIC信号"></a>IIC信号</h2><p>开始信号：SCL为高电平时，SDA产生高电平到低电平的跳变，开始传输数据</p><p>停止信号：SCL为高电平时，SDA产生低电平到高电平的跳变，结束传输数据</p><p>响应信号：接收器在接收到8位数据后，在第9个时钟周期，拉低SDA</p><h2 id="SMBus"><a href="#SMBus" class="headerlink" title="SMBus"></a>SMBus</h2><p>该协议是IIC的子集，对IIC中的硬件和软件有更严格的要求，包括时钟频率，地址回应，数据格式和重复发送START信号</p><p>VDD极限不同：SMBus要求1.8~5V，IIC范围很广，可高达12V</p><h2 id="IIC结构体"><a href="#IIC结构体" class="headerlink" title="IIC结构体"></a>IIC结构体</h2><p>i2c_adapter</p><h1 id="驱动开发基础知识"><a href="#驱动开发基础知识" class="headerlink" title="驱动开发基础知识"></a>驱动开发基础知识</h1><p>file_operations结构体在内核中存放在一个数组中，编号即为主设备号，注册驱动时需要该主设备号。</p><h2 id="驱动分层思想"><a href="#驱动分层思想" class="headerlink" title="驱动分层思想"></a>驱动分层思想</h2><p>led_resource结构体中左边分配资源，右边编写硬件通用代码</p><h2 id="总线设备驱动模型"><a href="#总线设备驱动模型" class="headerlink" title="总线设备驱动模型"></a>总线设备驱动模型</h2><p>平台device结构体和平台driver结构体通过.name成员变量进行匹配</p><p>平台设备device指定资源，平台driver用来做驱动程序相关的事情</p><p>总线驱动分为dev和drv两个链表，注册硬件资源时放入dev链表，注册驱动程序时放入drv链表，在调用驱动程序时从dev链表中一一对比结构体中的name，匹配成功后被调用，分配&#x2F;设置&#x2F;注册file_operations结构体，根据dev确定硬件，使用ioremap映射寄存器，操作寄存器。</p><h1 id="一些疑惑和个人理解"><a href="#一些疑惑和个人理解" class="headerlink" title="一些疑惑和个人理解"></a>一些疑惑和个人理解</h1><h2 id="为何要进行三网ping通"><a href="#为何要进行三网ping通" class="headerlink" title="为何要进行三网ping通"></a>为何要进行三网ping通</h2><p>个人理解为嵌入式Linux编程传输文件需要使用nfs文件目录，和使用tftp进行文件的传输，所以需要三网ping通用于传输文件</p><p>用于将虚拟机上的nfs挂载到开发板上</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;配置VMWARE使用双网卡连接开发板&quot;&gt;&lt;a href=&quot;#配置VMWARE使用双网卡连接开发板&quot; class=&quot;headerlink&quot; title=&quot;配置VMWARE使用双网卡连接开发板&quot;&gt;&lt;/a&gt;配置VMWARE使用双网卡连接开发板&lt;/h1&gt;&lt;p&gt;使用网卡连接</summary>
      
    
    
    
    
    <category term="嵌入式" scheme="http://example.com/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>C语言的本质</title>
    <link href="http://example.com/2022/10/23/C%E8%AF%AD%E8%A8%80%E7%9A%84%E6%9C%AC%E8%B4%A8/"/>
    <id>http://example.com/2022/10/23/C%E8%AF%AD%E8%A8%80%E7%9A%84%E6%9C%AC%E8%B4%A8/</id>
    <published>2022-10-23T01:58:59.000Z</published>
    <updated>2022-10-23T12:54:42.977Z</updated>
    
    <content type="html"><![CDATA[<h1 id="程序执行"><a href="#程序执行" class="headerlink" title="程序执行"></a>程序执行</h1><p>程序编译生成axf&#x2F;hex&#x2F;bin文件烧写到单片机flash中，cpu上电后依次读取flash中的指令并执行这些指令</p><p>在调用函数时，LR寄存器保存执行函数前下一条指令的地址，执行完函数后跳回到LR寄存器中保存的地址。</p><p>在调用函数前，先进行保存现场，将当前寄存器中的数值压入栈中</p><p>PC保存函数的地址，CPU每次都是执行PC寄存器中的指令</p><h1 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h1><p>局部变量初始化先分配在栈中，在初始化时先使用压栈指令给局部变量分配空间，再使用mov指令和str指令对该空间进行赋值</p><p>在进入函数时分配局部变量和程序开始执行时分配局部变量相同，在退出函数时依次将当前栈内的数据弹栈赋值给寄存器，将进入栈时压入的LR寄存器的数值赋值给PC寄存器，栈指针恢复到进入函数之前的位置。</p><h1 id="全局变量的初始化和空间分配"><a href="#全局变量的初始化和空间分配" class="headerlink" title="全局变量的初始化和空间分配"></a>全局变量的初始化和空间分配</h1><p>在调用main函数之前需要先调用一个copy函数将flash中的全局变量全部复制到ram中</p><p>链接器会根据已经指定的内存地址来进行空间分配</p><p>在对全局变量进行赋值操作时，首先去flash中读取全局变量在内存中的地址，根据该地址来得到全局变量的数值</p><p>没有进行初始化或者初始化为0的全局变量&#x2F;静态局部变量存储到bss段</p><p>多线程访问全局变量会产生<strong>非线程安全现象</strong>，在线程A对变量进行修改时，切换到线程B，切换前进行保护现场的操作，将还未经修改寄存器数值保存到堆栈，线程B修改寄存器数值后切换到A线程时需要恢复A线程的现场，将堆栈中未经修改的寄存器数值又赋值回了寄存器中，相当于线程B进行了无效操作。</p><p>为防止以上现象发生可以在访问全局变量时关中断，防止中断函数打断访问过程。</p><h1 id="RAM、ROM和FLASH"><a href="#RAM、ROM和FLASH" class="headerlink" title="RAM、ROM和FLASH"></a>RAM、ROM和FLASH</h1><p>ROM中存放用户程序和需要永久保存的数据。</p><p>RAM中存储用户程序中用到的变量，包括全局变量，局部变量，堆栈段。</p><p>FLASH中存储用户程序和需要永久保存的数据。</p><p>以f103为例，ram仅有64k，flash有512k，代码段存放在flash中</p><h1 id="栈和堆"><a href="#栈和堆" class="headerlink" title="栈和堆"></a>栈和堆</h1><p>栈向下增长</p><p>堆就是一块可以使用malloc和free函数管理的空闲空间 </p><p>堆的简易实现为一个占位空间大的数组</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">volatile</span> <span class="type">char</span> mybuf[<span class="number">20</span>*<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">volatile</span> <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> *<span class="title function_">malloc</span><span class="params">(<span class="type">int</span> size)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *ret = &amp;mybuf[index];</span><br><span class="line">    index += size;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单片机程序运行栈不够的时候，程序会跑飞</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;程序执行&quot;&gt;&lt;a href=&quot;#程序执行&quot; class=&quot;headerlink&quot; title=&quot;程序执行&quot;&gt;&lt;/a&gt;程序执行&lt;/h1&gt;&lt;p&gt;程序编译生成axf&amp;#x2F;hex&amp;#x2F;bin文件烧写到单片机flash中，cpu上电后依次读取flash中的指令并</summary>
      
    
    
    
    
    <category term="嵌入式" scheme="http://example.com/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>2022.10.19</title>
    <link href="http://example.com/2022/10/19/2022-10-19/"/>
    <id>http://example.com/2022/10/19/2022-10-19/</id>
    <published>2022-10-19T09:49:30.000Z</published>
    <updated>2022-10-19T10:05:29.141Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>从上周四开始投递简历之后收到了一些公司的面试邀请，但都是需要立即到岗的，所以就搁置了，打算放寒假前一周再联系，现在依然是在投简历。北京飞音时代公司发来的笔试题做了，但感觉希望不大，最后两道算法题调试结果一直不对，因为是考试的原因，比较紧张，没有把思路理清，笔试结束后第二天把题目做了出来，也不是很难，唉😔，希望能有面试机会吧。</p><p>关于蓝桥杯获奖的事情还有一个单项奖学金可以申请，当时听错了还以为是一千块钱，看了一下去年的单项奖学金初审名单，可能才400块钱，也还可以，算上比赛的报名费以及材料费加起来一共一千一，当时的心情很开心，把这件事情和父母说了说，他们也很开心。还和父亲说了一些以后的规划，对我的要求就是踏踏实实用学到的专业知识工作三年就好，只是这么一个期望，家里不算富裕但也还可以，不需要我向家里补贴。</p><h1 id="今天的事情"><a href="#今天的事情" class="headerlink" title="今天的事情"></a>今天的事情</h1><p>今天结束了ucos实时操作系统的学习，只是学习了一下接口的使用，并没有实际项目可以练习，一路学习下来还是很简单的，有操作系统的前置知识，学习实时操作系统只是把之前学过的操作系统只是进行了实践。打算买一块Linux开发板开始嵌入式Linux的学习。</p><h1 id="今后规划"><a href="#今后规划" class="headerlink" title="今后规划"></a>今后规划</h1><p>买一块板子，开始学习嵌入式Linux。</p><p><img src="https://hexo-1314225961.cos.ap-nanjing.myqcloud.com/%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95%E7%94%A8%E5%9B%BE/2022.10.19_content.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前情提要&quot;&gt;&lt;a href=&quot;#前情提要&quot; class=&quot;headerlink&quot; title=&quot;前情提要&quot;&gt;&lt;/a&gt;前情提要&lt;/h1&gt;&lt;p&gt;从上周四开始投递简历之后收到了一些公司的面试邀请，但都是需要立即到岗的，所以就搁置了，打算放寒假前一周再联系，现在依然是在投</summary>
      
    
    
    
    
    <category term="记录" scheme="http://example.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
